/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MCServerGUIServerWarningDialog.java
 *
 * Created on May 28, 2011, 1:04:43 AM
 */

package mcservergui;

import mcservergui.tools.MCServerGUIRegexVerifier;

/**
 *
 * @author dumptruckman
 */
public class MCServerGUIServerWarningDialog extends javax.swing.JDialog {

    /** Creates new form MCServerGUIServerWarningDialog */
    public MCServerGUIServerWarningDialog(java.awt.Frame parent,
            MCServerGUIListModel warningListModel,
            java.util.List<MCServerGUIServerWarning> serverWarningList) {
        super(parent);
        this.warningListModel = warningListModel;
        this.serverWarningList = serverWarningList;
        initComponents();
    }

    @org.jdesktop.application.Action public void closeTaskDialog() {
        dispose();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        timeBeforeLabel = new javax.swing.JLabel();
        timeBeforeField = new javax.swing.JTextField();
        messageLabel = new javax.swing.JLabel();
        messageField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N
        setResizable(false);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(mcservergui.MCServerGUIApp.class).getContext().getResourceMap(MCServerGUIServerWarningDialog.class);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        timeBeforeLabel.setText(resourceMap.getString("timeBeforeLabel.text")); // NOI18N
        timeBeforeLabel.setName("timeBeforeLabel"); // NOI18N

        timeBeforeField.setText(resourceMap.getString("timeBeforeField.text")); // NOI18N
        timeBeforeField.setToolTipText(resourceMap.getString("timeBeforeField.toolTipText")); // NOI18N
        timeBeforeField.setInputVerifier(new MCServerGUIRegexVerifier("^(\\d{1,2}h)?\\s?(\\d{1,2}m)?\\s?(\\d{1,2}s)?$"));
        timeBeforeField.setName("timeBeforeField"); // NOI18N

        messageLabel.setText(resourceMap.getString("messageLabel.text")); // NOI18N
        messageLabel.setName("messageLabel"); // NOI18N

        messageField.setText(resourceMap.getString("messageField.text")); // NOI18N
        messageField.setToolTipText(resourceMap.getString("messageField.toolTipText")); // NOI18N
        messageField.setName("messageField"); // NOI18N
        messageField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageFieldActionPerformed(evt);
            }
        });

        addButton.setText(resourceMap.getString("addButton.text")); // NOI18N
        addButton.setName("addButton"); // NOI18N
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(timeBeforeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeBeforeField, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(messageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(messageField, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(cancelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 195, Short.MAX_VALUE)
                .addComponent(addButton))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeBeforeLabel)
                    .addComponent(timeBeforeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageLabel)
                    .addComponent(messageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(cancelButton)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        closeTaskDialog();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        closeAndAdd();
    }//GEN-LAST:event_addButtonActionPerformed

    private void messageFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageFieldActionPerformed
        closeAndAdd();
    }//GEN-LAST:event_messageFieldActionPerformed

    private void closeAndAdd() {
        int seconds = 0, minutes = 0, hours = 0;
        String timebefore = timeBeforeField.getText();
        if (timebefore.contains("h")) {
            hours = Integer.parseInt(timebefore.split("h")[0].replaceAll(" ", ""));
            if (timebefore.contains("m") || timebefore.contains("s")) {
                timebefore = timebefore.split("h")[1];
            }
        }
        if (timebefore.contains("m")) {
            minutes = Integer.parseInt(timebefore.split("m")[0].replaceAll(" ", ""));
            if (timebefore.contains("s")) {
                timebefore = timebefore.split("m")[1];
            }
        }
        if (timebefore.contains("s")) {
            seconds = Integer.parseInt(timebefore.split("s")[0].replaceAll(" ", ""));
        }

        String time = "";

        if (hours != 0) {
            time += hours;
        }
        if (hours == 1) {
            time += " hour ";
        } else if (hours > 1) {
            time += " hours ";
        }
        if (minutes != 0) {
            time += minutes;
        }
        if (minutes == 1) {
            time += " minute ";
        } else if (minutes > 1) {
            time += " minutes ";
        }
        if (seconds!= 0) {
            time += seconds;
        }
        if (seconds == 1) {
            time += " second";
        } else if (seconds > 1) {
            time += " seconds";
        }
        serverWarningList.add(new MCServerGUIServerWarning(
                messageField.getText(),(hours * 3600) + (minutes * 60) + seconds));
        System.out.println(serverWarningList.get(serverWarningList.size()-1));
        warningListModel.add("Message: " + messageField.getText() + "<br><font size=2>Time: " + time);
        closeTaskDialog();
    }

    private MCServerGUIListModel warningListModel;
    private java.util.List<MCServerGUIServerWarning> serverWarningList;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField messageField;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JTextField timeBeforeField;
    private javax.swing.JLabel timeBeforeLabel;
    // End of variables declaration//GEN-END:variables

}
